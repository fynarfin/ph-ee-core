package org.mifos.connector.gsmastub.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import org.springframework.validation.annotation.Validated;
import org.threeten.bp.OffsetDateTime;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;
import java.util.Objects;

/**
 * RequestBillPayment
 */
@Validated
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2022-09-27T11:46:46.417Z[GMT]")


public class RequestBillPayment   {
  @JsonProperty("serviceProviderPaymentReference")
  private String serviceProviderPaymentReference = null;

  @JsonProperty("requestingOrganisationTransactionReference")
  private String requestingOrganisationTransactionReference = null;

  @JsonProperty("paymentType")
  private PaymentType paymentType = null;

  @JsonProperty("amountPaid")
  private String amountPaid = null;

  @JsonProperty("currency")
  private Currency currency = null;

  @JsonProperty("customerReference")
  private String customerReference = null;

  @JsonProperty("requestingOrganisation")
  private String requestingOrganisation = null;

  @JsonProperty("supplementaryBillReferenceDetails")
  private SupplementaryBillReferenceDetailsArray supplementaryBillReferenceDetails = null;

  @JsonProperty("requestDate")
  private OffsetDateTime requestDate = null;

  @JsonProperty("customData")
  private CustomDataArray customData = null;

  @JsonProperty("metadata")
  private MetadataArray metadata = null;

  @JsonProperty("paidAmount")
  private String paidAmount = null;

  public RequestBillPayment serviceProviderPaymentReference(String serviceProviderPaymentReference) {
    this.serviceProviderPaymentReference = serviceProviderPaymentReference;
    return this;
  }

  /**
   * Reference for the payment generated by the service provider.
   * @return serviceProviderPaymentReference
   **/
  @Schema(description = "Reference for the payment generated by the service provider.")
  
  @Size(max=256)   public String getServiceProviderPaymentReference() {
    return serviceProviderPaymentReference;
  }

  public void setServiceProviderPaymentReference(String serviceProviderPaymentReference) {
    this.serviceProviderPaymentReference = serviceProviderPaymentReference;
  }

  public RequestBillPayment requestingOrganisationTransactionReference(String requestingOrganisationTransactionReference) {
    this.requestingOrganisationTransactionReference = requestingOrganisationTransactionReference;
    return this;
  }

  /**
   * A reference provided by the requesting organisation that is to be associated with the transaction.
   * @return requestingOrganisationTransactionReference
   **/
  @Schema(description = "A reference provided by the requesting organisation that is to be associated with the transaction.")
  
  @Size(max=256)   public String getRequestingOrganisationTransactionReference() {
    return requestingOrganisationTransactionReference;
  }

  public void setRequestingOrganisationTransactionReference(String requestingOrganisationTransactionReference) {
    this.requestingOrganisationTransactionReference = requestingOrganisationTransactionReference;
  }

  public RequestBillPayment paymentType(PaymentType paymentType) {
    this.paymentType = paymentType;
    return this;
  }

  /**
   * Get paymentType
   * @return paymentType
   **/
  @Schema(description = "")
  
    @Valid
    public PaymentType getPaymentType() {
    return paymentType;
  }

  public void setPaymentType(PaymentType paymentType) {
    this.paymentType = paymentType;
  }

  public RequestBillPayment amountPaid(String amountPaid) {
    this.amountPaid = amountPaid;
    return this;
  }

  /**
   * Get amountPaid
   * @return amountPaid
   **/
  @Schema(example = "15.21", required = true, description = "")
      @NotNull

  @Pattern(regexp="^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$") @Size(min=1,max=23)   public String getAmountPaid() {
    return amountPaid;
  }

  public void setAmountPaid(String amountPaid) {
    this.amountPaid = amountPaid;
  }

  public RequestBillPayment currency(Currency currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   **/
  @Schema(required = true, description = "")
      @NotNull

    @Valid
    public Currency getCurrency() {
    return currency;
  }

  public void setCurrency(Currency currency) {
    this.currency = currency;
  }

  public RequestBillPayment customerReference(String customerReference) {
    this.customerReference = customerReference;
    return this;
  }

  /**
   * Textual reference provided by the customer paying the bill.
   * @return customerReference
   **/
  @Schema(description = "Textual reference provided by the customer paying the bill.")
  
  @Size(max=256)   public String getCustomerReference() {
    return customerReference;
  }

  public void setCustomerReference(String customerReference) {
    this.customerReference = customerReference;
  }

  public RequestBillPayment requestingOrganisation(String requestingOrganisation) {
    this.requestingOrganisation = requestingOrganisation;
    return this;
  }

  /**
   * The originating mobile money provider or financial institution that holds the wallet/account of the payer.
   * @return requestingOrganisation
   **/
  @Schema(description = "The originating mobile money provider or financial institution that holds the wallet/account of the payer.")
  
  @Size(max=256)   public String getRequestingOrganisation() {
    return requestingOrganisation;
  }

  public void setRequestingOrganisation(String requestingOrganisation) {
    this.requestingOrganisation = requestingOrganisation;
  }

  public RequestBillPayment supplementaryBillReferenceDetails(SupplementaryBillReferenceDetailsArray supplementaryBillReferenceDetails) {
    this.supplementaryBillReferenceDetails = supplementaryBillReferenceDetails;
    return this;
  }

  /**
   * Get supplementaryBillReferenceDetails
   * @return supplementaryBillReferenceDetails
   **/
  @Schema(description = "")
  
    @Valid
    public SupplementaryBillReferenceDetailsArray getSupplementaryBillReferenceDetails() {
    return supplementaryBillReferenceDetails;
  }

  public void setSupplementaryBillReferenceDetails(SupplementaryBillReferenceDetailsArray supplementaryBillReferenceDetails) {
    this.supplementaryBillReferenceDetails = supplementaryBillReferenceDetails;
  }

  public RequestBillPayment requestDate(OffsetDateTime requestDate) {
    this.requestDate = requestDate;
    return this;
  }

  /**
   * The date and time of the request as supplied by the client.
   * @return requestDate
   **/
  @Schema(description = "The date and time of the request as supplied by the client.")
  
    @Valid
    public OffsetDateTime getRequestDate() {
    return requestDate;
  }

  public void setRequestDate(OffsetDateTime requestDate) {
    this.requestDate = requestDate;
  }

  public RequestBillPayment customData(CustomDataArray customData) {
    this.customData = customData;
    return this;
  }

  /**
   * Get customData
   * @return customData
   **/
  @Schema(description = "")
  
    @Valid
    public CustomDataArray getCustomData() {
    return customData;
  }

  public void setCustomData(CustomDataArray customData) {
    this.customData = customData;
  }

  public RequestBillPayment metadata(MetadataArray metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   **/
  @Schema(description = "")
  
    @Valid
    public MetadataArray getMetadata() {
    return metadata;
  }

  public void setMetadata(MetadataArray metadata) {
    this.metadata = metadata;
  }

  public RequestBillPayment paidAmount(String paidAmount) {
    this.paidAmount = paidAmount;
    return this;
  }

  /**
   * Get paidAmount
   * @return paidAmount
   **/
  @Schema(example = "15.21", description = "")
  
  @Pattern(regexp="^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[0-9])?$") @Size(min=1,max=23)   public String getPaidAmount() {
    return paidAmount;
  }

  public void setPaidAmount(String paidAmount) {
    this.paidAmount = paidAmount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestBillPayment requestBillPayment = (RequestBillPayment) o;
    return Objects.equals(this.serviceProviderPaymentReference, requestBillPayment.serviceProviderPaymentReference) &&
        Objects.equals(this.requestingOrganisationTransactionReference, requestBillPayment.requestingOrganisationTransactionReference) &&
        Objects.equals(this.paymentType, requestBillPayment.paymentType) &&
        Objects.equals(this.amountPaid, requestBillPayment.amountPaid) &&
        Objects.equals(this.currency, requestBillPayment.currency) &&
        Objects.equals(this.customerReference, requestBillPayment.customerReference) &&
        Objects.equals(this.requestingOrganisation, requestBillPayment.requestingOrganisation) &&
        Objects.equals(this.supplementaryBillReferenceDetails, requestBillPayment.supplementaryBillReferenceDetails) &&
        Objects.equals(this.requestDate, requestBillPayment.requestDate) &&
        Objects.equals(this.customData, requestBillPayment.customData) &&
        Objects.equals(this.metadata, requestBillPayment.metadata) &&
        Objects.equals(this.paidAmount, requestBillPayment.paidAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serviceProviderPaymentReference, requestingOrganisationTransactionReference, paymentType, amountPaid, currency, customerReference, requestingOrganisation, supplementaryBillReferenceDetails, requestDate, customData, metadata, paidAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestBillPayment {\n");
    
    sb.append("    serviceProviderPaymentReference: ").append(toIndentedString(serviceProviderPaymentReference)).append("\n");
    sb.append("    requestingOrganisationTransactionReference: ").append(toIndentedString(requestingOrganisationTransactionReference)).append("\n");
    sb.append("    paymentType: ").append(toIndentedString(paymentType)).append("\n");
    sb.append("    amountPaid: ").append(toIndentedString(amountPaid)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    customerReference: ").append(toIndentedString(customerReference)).append("\n");
    sb.append("    requestingOrganisation: ").append(toIndentedString(requestingOrganisation)).append("\n");
    sb.append("    supplementaryBillReferenceDetails: ").append(toIndentedString(supplementaryBillReferenceDetails)).append("\n");
    sb.append("    requestDate: ").append(toIndentedString(requestDate)).append("\n");
    sb.append("    customData: ").append(toIndentedString(customData)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    paidAmount: ").append(toIndentedString(paidAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
